{
    "swagger": "2.0",
    "info": {
        "description": "A RBAC service API in Golang using Gin framework",
        "title": "RBAC EVENT API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:5000",
    "paths": {
        "/event": {
            "get": {
                "description": "Retrieve a list of all events.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Get all event resources",
                "responses": {
                    "200": {
                        "description": "List of events retrieved successfully"
                    }
                }
            },
            "post": {
                "description": "Create a new event by providing title, description, start time, and end time.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Create a new event resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event start time (RFC3339 format)",
                        "name": "startTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event end time (RFC3339 format)",
                        "name": "endTime",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event created successfully"
                    }
                }
            }
        },
        "/event/{id}": {
            "get": {
                "description": "Retrieve a specific event by providing its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Get a specific event resource by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event retrieved successfully"
                    }
                }
            },
            "put": {
                "description": "Update a specific event by providing its ID and new data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Update a specific event resource by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New event title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New event description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New event start time (RFC3339 format)",
                        "name": "startTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New event end time (RFC3339 format)",
                        "name": "endTime",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event updated successfully"
                    }
                }
            },
            "delete": {
                "description": "Delete a specific event by providing its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Delete a specific event resource by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to the application with the provided username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login to the application",
                "parameters": [
                    {
                        "description": "Username for login",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password for login",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/logout": {
            "get": {
                "description": "Logout the user by clearing the authentication token cookie.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout and clear user's authentication token",
                "responses": {}
            }
        },
        "/permission": {
            "get": {
                "description": "Retrieve a list of all permissions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get all permissions",
                "responses": {
                    "200": {
                        "description": "List of permissions retrieved successfully"
                    }
                }
            },
            "post": {
                "description": "Create a new permission by providing its name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the new permission",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission created successfully"
                    }
                }
            }
        },
        "/permission/{id}": {
            "get": {
                "description": "Retrieve a specific permission by providing its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get a specific permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully"
                    }
                }
            },
            "put": {
                "description": "Update a specific permission by providing its ID and new data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Update a specific permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New name for the permission",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission updated successfully"
                    }
                }
            },
            "delete": {
                "description": "Delete a specific permission by providing its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Delete a specific permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully"
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Retrieve a list of all user profiles, including their associated roles and permissions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Get all user profiles with associated roles and permissions",
                "responses": {}
            }
        },
        "/profile/{id}": {
            "get": {
                "description": "Retrieve user profile by providing the user's ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profiles"
                ],
                "summary": "Get user profile by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user with the provided credentials and roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Username for registration",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password for registration",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Roles for the user (e.g., ['admin', 'user'])",
                        "name": "roles",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/role": {
            "get": {
                "description": "Get a list of all roles along with their associated permissions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get all roles with associated permissions",
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully"
                    }
                }
            },
            "post": {
                "description": "Create a new role by providing its name and permissions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the role",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "description": "Array of permission names",
                        "name": "permissions",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role created successfully"
                    }
                }
            }
        },
        "/role/{id}": {
            "get": {
                "description": "Get details of a specific role by providing its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get a specific role by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully"
                    }
                }
            },
            "put": {
                "description": "Edit details of a specific role by providing its ID and new data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Edit a specific role by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "name for role",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "permission for user",
                        "name": "permissions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role edited successfully"
                    }
                }
            },
            "delete": {
                "description": "Remove a specific role by providing its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Remove a specific role by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role removed successfully"
                    }
                }
            }
        },
        "/validate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Validate the user authentication token and return user information.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Validate user authentication token",
                "responses": {}
            }
        }
    }
}